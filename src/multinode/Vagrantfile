VAGRANTFILE_API_VERSION = "2"

# Require YAML module
require 'time'

# Get timezone
timezone = Time.now.zone()

# Create boxes
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  if Vagrant.has_plugin?("vagrant-timezone")
       config.timezone.value=timezone
  end
  
  # Iterate through entries in YAML file
  
  (1..3).each do |id|
    config.vm.define "k8s-node-#{id}" do |srv|
      srv.vm.box = "qarham/ubuntu-1604-250G"
      ip_last_octet = id + 1
      srv.vm.hostname = "k8s-node-#{id}"
  
      srv.vm.network "private_network", ip: "10.0.20.#{ip_last_octet}", virtualbox__intnet: "network_cloud"
  
      srv.vm.network "forwarded_port", guest: 8143, host: "8#{id}43"
      srv.vm.network "forwarded_port", guest: 8083, host: "8#{id}83"
      srv.vm.network "forwarded_port", guest: 8085, host: "8#{id}85"
      srv.vm.network "forwarded_port", guest: 8082, host: "8#{id}82"
      srv.vm.network "forwarded_port", guest: 31000, host: "3100#{id}"
  
      srv.vm.provision "shell", path: "scripts/install_3rd_pack.sh"
      srv.vm.provision "shell", path: "scripts/ntp.sh"
      srv.vm.provision "shell", path: "scripts/enable_root_login.sh"
      srv.vm.provision "shell", inline: "sudo service ufw stop"
  
      srv.vm.provider :virtualbox do |vb|
        vb.name = "k8s-node-#{id}"
        vb.memory = "32768" 
        vb.cpus = "4"
        vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.1", "1"]
        vb.customize ["setextradata", :id, "VBoxInternal/CPUM/SSE4.2", "1"]
        vb.customize ["modifyvm", :id, "--paravirtprovider", "kvm"]
      end

      if id == 1
        srv.vm.provision "shell", path: "scripts/gen_ssh_key.sh"
        srv.vm.provision "shell", path: "scripts/copy_ssh_key.sh"
      end

      if id == 2
        srv.vm.provision "shell", path: "scripts/copy_ssh_key.sh"
      end

      if id == 3
        srv.vm.provision "shell", path: "scripts/copy_ssh_key.sh"
        srv.vm.provision "shell", path: "scripts/config_ansible.sh"
        srv.vm.provision "ansible_local" do |ansible|
          ansible.limit = "all"
          ansible.inventory_path = "ansible_provisioning/inventory/multinode-inventory.ini"
          ansible.playbook = "ansible_provisioning/main.yaml"
          ansible.verbose = "v"
          ansible.become_user = "root"
        end
      end
    end
  end
end
